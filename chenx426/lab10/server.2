Script started on 2020-03-24 23:13:57-0400
]0;chenx426@wolf:/h/u15/c9/00/chenx426/chenx426/lab10wolf:~/chenx426/lab10$ nano uf[K[Kbufserver.c
[?1049h[22;0;0t[1;55r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[53;33H(B[0;7m[ Reading File ](B[m[53;32H(B[0;7m[ Read 95 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                     bufserver.c                                [1;79H(B[m[54d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[55d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[53d[3d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m<stdio.h>[4d[36m#include[39m(B[m (B[0;1m[33m<stdlib.h>[5d[36m#include[39m(B[m (B[0;1m[33m<string.h>[6d[36m#include[39m(B[m (B[0;1m[33m<unistd.h>[7d[36m#include[39m(B[m (B[0;1m[33m<arpa/inet.h>[9d[36m#include[39m(B[m (B[0;1m[33m"socket.h"[11d[36m#ifndef[39m(B[m (B[0;1m[31mPORT[12d[36m  #define[39m(B[m (B[0;1m[31mPORT[39m(B[m 54993[13d(B[0;1m[36m#endif[15d#define[39m(B[m (B[0;1m[31mBUFSIZE[39m(B[m 30[17d[32mint[39m(B[m find_network_newline([32mconst[39m(B[m [32mchar[39m(B[m *buf, [32mint[39m(B[m n);[20d[32mint[39m(B[m main() {[21;5H(B[0;1m[34m// This line causes stdout not to be buffered.[22;5H// Don't change this! Necessary for autotesting.[23;5H[39m(B[msetbuf(stdout, (B[0;1m[31mNULL[39m(B[m);[25;5H[32mstruct[39m(B[m sockaddr_in *self = init_server_addr((B[0;1m[31mPORT[39m(B[m);[26;5H[32mint[39m(B[m listenfd = set_up_server_socket(self, 5);[28;5H(B[0;1m[33mwhile[39m(B[m (1) {[29;9H[32mint[39m(B[m fd = accept_connection(listenfd);[30;9H(B[0;1m[33mif[39m(B[m (fd < 0) {[31;13H[35mcontinue[39m(B[m;[32;9H}[34d(B[0;1m[34m// Receive messages[35;9H(B[0m[32mchar[39m(B[m buf[(B[0;1m[31mBUFSIZE[39m(B[m] = {(B[0;1m[35m'\0'[39m(B[m};[36;9H[32mint[39m(B[m inbuf = 0;[36;34H(B[0;1m[34m// How many bytes currently in buffer?[37;9H(B[0m[32mint[39m(B[m room = [32msizeof[39m(B[m(buf);  (B[0;1m[34m// How many bytes remaining in buffer?[38;9H(B[0m[32mchar[39m(B[m *after = buf;[34G(B[0;1m[34m// Pointer to position after the data in buf[40;9H(B[0m[32mint[39m(B[m nbytes;[41;9H(B[0;1m[33mwhile[39m(B[m ((nbytes = read(fd, after, room)) > 0) {[42;13Hinbuf += nbytes;[43;13H(B[0;1m[34m// Step 1: update inbuf (how many bytes were just added?)[44;13H(B[0m[32mint[39m(B[m where;[46;13H(B[0;1m[34m// Step 2: the loop condition below calls find_network_newline[47;13H// to determine if a full line has been read from the client.[48;13H// Your next task should be to implement find_network_newline[49;13H// (found at the bottom of this file).[50;13H//[51d// Note: we use a loop here because a single read might result in[52;13H// more than one full line.[3d[39m(B[m[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[53d[K[12;4H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l5[?12l[?25h[?25l4[?12l[?25h[?25l9[?12l[?25h[?25l9[?12l[?25h[?25l3[?12l[?25h[?25l[1;71H(B[0;7mModified(B[m[12;20H [?12l[?25h[?25l4[?12l[?25h[?25l[53d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                   [54;1H Y(B[m Yes[K[55d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[53;63H[?12l[?25h[?25l[54d(B[0;7m^G(B[m Get Help[54;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[54;61H(B[0;7mM-B(B[m Backup File[55d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[55;61H(B[0;7m^T(B[m To Files[53d(B[0;7mFile Name to Write: bufserver.c                              (B[m[53;32H[?12l[?25h[?25l[K[1;79H[1;71H(B[0;7m        (B[m[53;32H(B[0;7m[ Wrote 95 lines ](B[m[J[55;80H[?12l[?25h[55;1H[?1049l[23;0;0t[?1l>]0;chenx426@wolf:/h/u15/c9/00/chenx426/chenx426/lab10wolf:~/chenx426/lab10$ nano randclient.c
[?1049h[22;0;0t[1;55r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[53;33H(B[0;7m[ Reading File ](B[m[53;32H(B[0;7m[ Read 61 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                     randclient.c                               [1;79H(B[m[54d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[55d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[53d[3d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m<stdio.h>[4d[36m#include[39m(B[m (B[0;1m[33m<string.h>[5d[36m#include[39m(B[m (B[0;1m[33m<stdlib.h>[6d[36m#include[39m(B[m (B[0;1m[33m<unistd.h>[7d[36m#include[39m(B[m (B[0;1m[33m<netdb.h>[8d[36m#include[39m(B[m (B[0;1m[33m<arpa/inet.h>[10d[36m#include[39m(B[m (B[0;1m[33m"socket.h"[12d[36m#ifndef[39m(B[m (B[0;1m[31mPORT[13d[36m  #define[39m(B[m (B[0;1m[31mPORT[39m(B[m 54993[14d(B[0;1m[36m#endif[16d#define[39m(B[m (B[0;1m[31mMESSAGE[39m(B[m (B[0;1m[33m"A stitch in time\r\n"[17d[36m#define[39m(B[m (B[0;1m[31mTIMES[39m(B[m 5 (B[0;1m[34m// number of times to send the message[18d[36m#define[39m(B[m (B[0;1m[31mMINCHARS[39m(B[m 3[19d(B[0;1m[36m#define[39m(B[m (B[0;1m[31mMAXCHARS[39m(B[m 7[22d[32mvoid[39m(B[m write_random_pieces([32mint[39m(B[m soc, [32mconst[39m(B[m [32mchar[39m(B[m *message, [32mint[39m(B[m times);[25d[32mint[39m(B[m main([32mint[39m(B[m argc, [32mchar[39m(B[m **argv) {[26;5H(B[0;1m[33mif[39m(B[m (argc != 2) {[27;9Hfprintf(stderr, (B[0;1m[33m"Usage: randclient hostname\n"[39m(B[m);[28;9Hexit(1);[29;5H}[31d[32mint[39m(B[m soc = connect_to_server((B[0;1m[31mPORT[39m(B[m, argv[1]);[33;5Hwrite_random_pieces(soc, (B[0;1m[31mMESSAGE[39m(B[m, (B[0;1m[31mTIMES[39m(B[m);[35;5Hclose(soc);[36;5H[35mreturn[39m(B[m 0;[37d}[40d(B[0;1m[34m/*[41d * Write the given message the given number of times to the given socket, and r[39m(B[m$[42;1H(B[0;1m[34m * Do NOT write any null-terminator characters.[43d */[44d(B[0m[32mvoid[39m(B[m write_random_pieces([32mint[39m(B[m soc, [32mconst[39m(B[m [32mchar[39m(B[m *message, [32mint[39m(B[m times) {[45;5H[32mchar[39m(B[m piece[(B[0;1m[31mMAXCHARS[39m(B[m];[46;5H[32mint[39m(B[m message_len = strlen(message);[47;5H[32mint[39m(B[m total_bytes = times * message_len;[48;5H[32mint[39m(B[m current_byte = 0;[50;5H(B[0;1m[33mwhile[39m(B[m (current_byte < total_bytes) {[51;9H[32mint[39m(B[m piece_size = rand() % ((B[0;1m[31mMAXCHARS[39m(B[m - (B[0;1m[31mMINCHARS[39m(B[m + 1) + (B[0;1m[31mMINCHARS[39m(B[m;[52;9H[32mint[39m(B[m bytes_left = total_bytes - current_byte;[3d[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[53d[K[13;16H[?12l[?25h[?25l5[?12l[?25h[?25l4[?12l[?25h[?25l9[?12l[?25h[?25l9[?12l[?25h[?25l3[?12l[?25h[?25l[1;71H(B[0;7mModified(B[m[13;20H [?12l[?25h[?25l4[?12l[?25h[?25l[53d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                   [54;1H Y(B[m Yes[K[55d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[53;63H[?12l[?25h[?25l[54d(B[0;7m^G(B[m Get Help[54;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[54;61H(B[0;7mM-B(B[m Backup File[55d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[55;61H(B[0;7m^T(B[m To Files[53d(B[0;7mFile Name to Write: randclient.c                             (B[m[53;33H[?12l[?25h[?25l[K[1;79H[1;71H(B[0;7m        (B[m[53;32H(B[0;7m[ Wrote 61 lines ](B[m[J[55;80H[?12l[?25h[55;1H[?1049l[23;0;0t[?1l>]0;chenx426@wolf:/h/u15/c9/00/chenx426/chenx426/lab10wolf:~/chenx426/lab10$ nano Makefile 
[?1049h[22;0;0t[1;55r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[53;33H(B[0;7m[ Reading File ](B[m[53;32H(B[0;7m[ Read 19 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                       Makefile                                 [1;79H(B[m[54d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[55d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[53d[3d[39;49m(B[mPORT[31m=[39m(B[m54993[4dCFLAGS [31m=[39m(B[m -DPORT[31m=[34m$(PORT)[39m(B[m -g -Wall -std[31m=[39m(B[mgnu99[6d(B[0;1m[34mall:[39m(B[m readserver randclient bufserver[8d(B[0;1m[34mreadserver:[39m(B[m readserver.o socket.o[9;9Hgcc [34m${CFLAGS}[39m(B[m -o $@ $^[11d(B[0;1m[34mrandclient:[39m(B[m randclient.o socket.o[12;9Hgcc [34m${CFLAGS}[39m(B[m -o $@ $^[14d(B[0;1m[34mbufserver:[39m(B[m bufserver.o socket.o[15;9Hgcc [34m${CFLAGS}[39m(B[m -o $@ $^[17d(B[0;1m[34m%.o:[39m(B[m %.c socket.h[18;9Hgcc [34m${CFLAGS}[39m(B[m -c $<[20d(B[0;1m[34mclean:[21;9H[39m(B[mrm *.o readserver randclient bufserver[3d[?12l[?25h[?25lP[?12l[?25h[?25lO[?12l[?25h[?25lR[?12l[?25h[?25lT[?12l[?25h[?25l[C[?12l[?25h[?25l5[?12l[?25h[?25l4[?12l[?25h[?25l9[?12l[?25h[?25l9[?12l[?25h[?25l3[?12l[?25h[?25l[1;71H(B[0;7mModified(B[m[3;10H [?12l[?25h[?25l4[?12l[?25h[?25l[53d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                   [54;1H Y(B[m Yes[K[55d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[53;63H[?12l[?25h[?25l[54d(B[0;7m^G(B[m Get Help[54;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[54;61H(B[0;7mM-B(B[m Backup File[55d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[55;61H(B[0;7m^T(B[m To Files[53d(B[0;7mFile Name to Write: Makefile                                 (B[m[53;29H[?12l[?25h[?25l[K[1;79H[1;71H(B[0;7m        (B[m[53;32H(B[0;7m[ Wrote 19 lines ](B[m[J[55;80H[?12l[?25h[55;1H[?1049l[23;0;0t[?1l>]0;chenx426@wolf:/h/u15/c9/00/chenx426/chenx426/lab10wolf:~/chenx426/lab10$ make
gcc -DPORT=54994 -g -Wall -std=gnu99 -c randclient.c
gcc -DPORT=54994 -g -Wall -std=gnu99 -o randclient randclient.o socket.o
gcc -DPORT=54994 -g -Wall -std=gnu99 -c bufserver.c
gcc -DPORT=54994 -g -Wall -std=gnu99 -o bufserver bufserver.o socket.o
]0;chenx426@wolf:/h/u15/c9/00/chenx426/chenx426/lab10wolf:~/chenx426/lab10$ gdb ./bufserver
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./bufserver...done.
(gdb) break main
Breakpoint 1 at 0xce2: file bufserver.c, line 18.
(gdb) r
Starting program: /h/u15/c9/00/chenx426/chenx426/lab10/bufserver 

Breakpoint 1, main () at bufserver.c:18
18      int main() {
(gdb) dispaly buf
Undefined command: "dispaly".  Try "help".
(gdb) display buf
1: buf = 0x0
(gdb) display inbuff[K
No symbol "inbuf" in current context.
(gdb) n
21          setbuf(stdout, NULL);
1: buf = 0x0
(gdb) n
23          struct sockaddr_in *self = init_server_addr(PORT);
1: buf = 0x0
(gdb) n
24          int listenfd = set_up_server_socket(self, 5);
1: buf = 0x0
(gdb) n
27              int fd = accept_connection(listenfd);
1: buf = 0x0
(gdb) n
Waiting for a new connection...
n
New connection accepted from 127.0.0.1:43676
28              if (fd < 0) {
1: buf = 0x0
(gdb) n
33              char buf[BUFSIZE] = {'\0'};
1: buf = 0x0
(gdb) display inbuf
2: inbuf = -136481184
(gdb) n
34              int inbuf = 0;           // How many bytes currently in buffer?
1: buf = 0x0
2: inbuf = -136481184
(gdb) n
35              int room = sizeof(buf);  // How many bytes remaining in buffer?
1: buf = 0x0
2: inbuf = 0
(gdb) n
36              char *after = buf;       // Pointer to position after the data in buf
1: buf = 0x0
2: inbuf = 0
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 0
(gdb) n
40                  inbuf += nbytes;
1: buf = 0x0
2: inbuf = 0
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
(gdb) n
58                      buf[where - 2] = '\0';
1: buf = 0x0
2: inbuf = 30
(gdb) n
59                      printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
(gdb) n
Next message: A stitch in time
69                      inbuf -= where;
1: buf = 0x0
2: inbuf = 30
(gdb) n
70                      memmove(buf, &(buf[where]), inbuf);
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
73                  after = &(buf[inbuf]);
1: buf = 0x0
2: inbuf = 12
(gdb) n
74                  room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
40                  inbuf += nbytes;
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
(gdb) n
58                      buf[where - 2] = '\0';
1: buf = 0x0
2: inbuf = 30
(gdb) n
59                      printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
(gdb) n
Next message: A stitch in time
69                      inbuf -= where;
1: buf = 0x0
2: inbuf = 30
(gdb) n
70                      memmove(buf, &(buf[where]), inbuf);
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
73                  after = &(buf[inbuf]);
1: buf = 0x0
2: inbuf = 12
(gdb) n
74                  room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
40                  inbuf += nbytes;
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
(gdb) n
58                      buf[where - 2] = '\0';
1: buf = 0x0
2: inbuf = 30
(gdb) n
59                      printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
(gdb) n
Next message: A stitch in time
69                      inbuf -= where;
1: buf = 0x0
2: inbuf = 30
(gdb) n
70                      memmove(buf, &(buf[where]), inbuf);
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
73                  after = &(buf[inbuf]);
1: buf = 0x0
2: inbuf = 12
(gdb) n
74                  room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
40                  inbuf += nbytes;
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 30
(gdb) n
58                      buf[where - 2] = '\0';
1: buf = 0x0
2: inbuf = 30
(gdb) n
59                      printf("Next message: %s\n", buf);
1: buf = 0x0
2: inbuf = 30
(gdb) n
Next message: A stitch in time
69                      inbuf -= where;
1: buf = 0x0
2: inbuf = 30
(gdb) n
70                      memmove(buf, &(buf[where]), inbuf);
1: buf = 0x0
2: inbuf = 12
(gdb) n
51                  while ((where = find_network_newline(buf, inbuf)) > 0) {
1: buf = 0x0
2: inbuf = 12
(gdb) n
73                  after = &(buf[inbuf]);
1: buf = 0x0
2: inbuf = 12
(gdb) n
74                  room = sizeof(buf) - inbuf;
1: buf = 0x0
2: inbuf = 12
(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) [K(gdb) q
A debugging session is active.

        Inferior 1 [process 27750] will be killed.

Quit anyway? (y or n) y
]0;chenx426@wolf:/h/u15/c9/00/chenx426/chenx426/lab10wolf:~/chenx426/lab10$ exit
exit

Script done on 2020-03-24 23:21:33-0400
